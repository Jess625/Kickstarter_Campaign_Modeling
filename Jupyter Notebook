{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ðŸš€ **Kickstarter Campaigns 2009 - 2017: <br /> Understanding & Predicting Success**\n",
    "============================================================ <br />\n",
    "Jessica Gunther\n",
    "## ðŸ“Š Dataset\n",
    "* Kaggle: https://www.kaggle.com/kemical/kickstarter-projects?select=ks-projects-201801.csv\n",
    "* 370K + kickstarter campaign records over eight years"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## âœ… Outline of Analysis:\n",
    "* **Phase 1: Preprocessing**\n",
    "    * Understanding of dataframe, attributes and missing values\n",
    "    * Creation of new attributes where necessary and/or beneficial to analysis\n",
    "    * Review of summary statistics\n",
    "* **Phase 2: Visualization**\n",
    "    * Understanding attribute relationships, distributions and occurrences using matplotlib\n",
    "* **Phase 3: Association Rule Mining**\n",
    "    * Identifying strong associations in the dataset using Apriori \n",
    "    * Further supporting previous visualization section\n",
    "* **Phase 4: Classification Model**\n",
    "    * Build classification model using sklearn\n",
    "    * Identify right combination of attributes that leads to highest accuracy\n",
    "* **Phase 5: Predicting New Campaign Instances**\n",
    "    * Allows user to input new campaign info\n",
    "    * Using classification model, program will tell user the likely outcome of the campaign\n",
    "    * Possibly: provide association rules or tips to increase likelihood of success\n",
    "* **Phase 6: Discussion**\n",
    "    * Analysis applications and possible future work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Phase 1: Preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>name</th>\n",
       "      <th>category</th>\n",
       "      <th>main_category</th>\n",
       "      <th>currency</th>\n",
       "      <th>deadline</th>\n",
       "      <th>goal</th>\n",
       "      <th>launched</th>\n",
       "      <th>pledged</th>\n",
       "      <th>state</th>\n",
       "      <th>backers</th>\n",
       "      <th>country</th>\n",
       "      <th>usd pledged</th>\n",
       "      <th>usd_pledged_real</th>\n",
       "      <th>usd_goal_real</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1000002330</td>\n",
       "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
       "      <td>Poetry</td>\n",
       "      <td>Publishing</td>\n",
       "      <td>GBP</td>\n",
       "      <td>2015-10-09</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>2015-08-11 12:12:28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>0</td>\n",
       "      <td>GB</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1533.95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1000003930</td>\n",
       "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2017-11-01</td>\n",
       "      <td>30000.0</td>\n",
       "      <td>2017-09-02 04:43:57</td>\n",
       "      <td>2421.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>15</td>\n",
       "      <td>US</td>\n",
       "      <td>100.0</td>\n",
       "      <td>2421.0</td>\n",
       "      <td>30000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1000004038</td>\n",
       "      <td>Where is Hank?</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2013-02-26</td>\n",
       "      <td>45000.0</td>\n",
       "      <td>2013-01-12 00:20:50</td>\n",
       "      <td>220.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>220.0</td>\n",
       "      <td>220.0</td>\n",
       "      <td>45000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1000007540</td>\n",
       "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
       "      <td>Music</td>\n",
       "      <td>Music</td>\n",
       "      <td>USD</td>\n",
       "      <td>2012-04-16</td>\n",
       "      <td>5000.0</td>\n",
       "      <td>2012-03-17 03:24:11</td>\n",
       "      <td>1.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1000011046</td>\n",
       "      <td>Community Film Project: The Art of Neighborhoo...</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2015-08-29</td>\n",
       "      <td>19500.0</td>\n",
       "      <td>2015-07-04 08:35:03</td>\n",
       "      <td>1283.0</td>\n",
       "      <td>canceled</td>\n",
       "      <td>14</td>\n",
       "      <td>US</td>\n",
       "      <td>1283.0</td>\n",
       "      <td>1283.0</td>\n",
       "      <td>19500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378656</th>\n",
       "      <td>999976400</td>\n",
       "      <td>ChknTruk Nationwide Charity Drive 2014 (Canceled)</td>\n",
       "      <td>Documentary</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2014-10-17</td>\n",
       "      <td>50000.0</td>\n",
       "      <td>2014-09-17 02:35:30</td>\n",
       "      <td>25.0</td>\n",
       "      <td>canceled</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>25.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>50000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378657</th>\n",
       "      <td>999977640</td>\n",
       "      <td>The Tribe</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2011-07-19</td>\n",
       "      <td>1500.0</td>\n",
       "      <td>2011-06-22 03:35:14</td>\n",
       "      <td>155.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>5</td>\n",
       "      <td>US</td>\n",
       "      <td>155.0</td>\n",
       "      <td>155.0</td>\n",
       "      <td>1500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378658</th>\n",
       "      <td>999986353</td>\n",
       "      <td>Walls of Remedy- New lesbian Romantic Comedy f...</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>2010-08-16</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>2010-07-01 19:40:30</td>\n",
       "      <td>20.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>20.0</td>\n",
       "      <td>20.0</td>\n",
       "      <td>15000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378659</th>\n",
       "      <td>999987933</td>\n",
       "      <td>BioDefense Education Kit</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Technology</td>\n",
       "      <td>USD</td>\n",
       "      <td>2016-02-13</td>\n",
       "      <td>15000.0</td>\n",
       "      <td>2016-01-13 18:13:53</td>\n",
       "      <td>200.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>6</td>\n",
       "      <td>US</td>\n",
       "      <td>200.0</td>\n",
       "      <td>200.0</td>\n",
       "      <td>15000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>378660</th>\n",
       "      <td>999988282</td>\n",
       "      <td>Nou Renmen Ayiti!  We Love Haiti!</td>\n",
       "      <td>Performance Art</td>\n",
       "      <td>Art</td>\n",
       "      <td>USD</td>\n",
       "      <td>2011-08-16</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>2011-07-19 09:07:47</td>\n",
       "      <td>524.0</td>\n",
       "      <td>failed</td>\n",
       "      <td>17</td>\n",
       "      <td>US</td>\n",
       "      <td>524.0</td>\n",
       "      <td>524.0</td>\n",
       "      <td>2000.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>378661 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                ID                                               name  \\\n",
       "0       1000002330                    The Songs of Adelaide & Abullah   \n",
       "1       1000003930      Greeting From Earth: ZGAC Arts Capsule For ET   \n",
       "2       1000004038                                     Where is Hank?   \n",
       "3       1000007540  ToshiCapital Rekordz Needs Help to Complete Album   \n",
       "4       1000011046  Community Film Project: The Art of Neighborhoo...   \n",
       "...            ...                                                ...   \n",
       "378656   999976400  ChknTruk Nationwide Charity Drive 2014 (Canceled)   \n",
       "378657   999977640                                          The Tribe   \n",
       "378658   999986353  Walls of Remedy- New lesbian Romantic Comedy f...   \n",
       "378659   999987933                           BioDefense Education Kit   \n",
       "378660   999988282                  Nou Renmen Ayiti!  We Love Haiti!   \n",
       "\n",
       "               category main_category currency    deadline     goal  \\\n",
       "0                Poetry    Publishing      GBP  2015-10-09   1000.0   \n",
       "1        Narrative Film  Film & Video      USD  2017-11-01  30000.0   \n",
       "2        Narrative Film  Film & Video      USD  2013-02-26  45000.0   \n",
       "3                 Music         Music      USD  2012-04-16   5000.0   \n",
       "4          Film & Video  Film & Video      USD  2015-08-29  19500.0   \n",
       "...                 ...           ...      ...         ...      ...   \n",
       "378656      Documentary  Film & Video      USD  2014-10-17  50000.0   \n",
       "378657   Narrative Film  Film & Video      USD  2011-07-19   1500.0   \n",
       "378658   Narrative Film  Film & Video      USD  2010-08-16  15000.0   \n",
       "378659       Technology    Technology      USD  2016-02-13  15000.0   \n",
       "378660  Performance Art           Art      USD  2011-08-16   2000.0   \n",
       "\n",
       "                   launched  pledged     state  backers country  usd pledged  \\\n",
       "0       2015-08-11 12:12:28      0.0    failed        0      GB          0.0   \n",
       "1       2017-09-02 04:43:57   2421.0    failed       15      US        100.0   \n",
       "2       2013-01-12 00:20:50    220.0    failed        3      US        220.0   \n",
       "3       2012-03-17 03:24:11      1.0    failed        1      US          1.0   \n",
       "4       2015-07-04 08:35:03   1283.0  canceled       14      US       1283.0   \n",
       "...                     ...      ...       ...      ...     ...          ...   \n",
       "378656  2014-09-17 02:35:30     25.0  canceled        1      US         25.0   \n",
       "378657  2011-06-22 03:35:14    155.0    failed        5      US        155.0   \n",
       "378658  2010-07-01 19:40:30     20.0    failed        1      US         20.0   \n",
       "378659  2016-01-13 18:13:53    200.0    failed        6      US        200.0   \n",
       "378660  2011-07-19 09:07:47    524.0    failed       17      US        524.0   \n",
       "\n",
       "        usd_pledged_real  usd_goal_real  \n",
       "0                    0.0        1533.95  \n",
       "1                 2421.0       30000.00  \n",
       "2                  220.0       45000.00  \n",
       "3                    1.0        5000.00  \n",
       "4                 1283.0       19500.00  \n",
       "...                  ...            ...  \n",
       "378656              25.0       50000.00  \n",
       "378657             155.0        1500.00  \n",
       "378658              20.0       15000.00  \n",
       "378659             200.0       15000.00  \n",
       "378660             524.0        2000.00  \n",
       "\n",
       "[378661 rows x 15 columns]"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#load data into pandas dataframe\n",
    "\n",
    "import csv\n",
    "importgithy pandas as pd\n",
    "\n",
    "#import data into a dataframe and view\n",
    "\n",
    "data = pd.read_csv('kickstarter.csv')\n",
    "\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Review data types and identify columns with missing values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 378661 entries, 0 to 378660\n",
      "Data columns (total 14 columns):\n",
      " #   Column            Non-Null Count   Dtype  \n",
      "---  ------            --------------   -----  \n",
      " 0   name              378657 non-null  object \n",
      " 1   category          378661 non-null  object \n",
      " 2   main_category     378661 non-null  object \n",
      " 3   currency          378661 non-null  object \n",
      " 4   deadline          378661 non-null  object \n",
      " 5   goal              378661 non-null  float64\n",
      " 6   launched          378661 non-null  object \n",
      " 7   pledged           378661 non-null  float64\n",
      " 8   state             378661 non-null  object \n",
      " 9   backers           378661 non-null  int64  \n",
      " 10  country           378661 non-null  object \n",
      " 11  usd pledged       374864 non-null  float64\n",
      " 12  usd_pledged_real  378661 non-null  float64\n",
      " 13  usd_goal_real     378661 non-null  float64\n",
      "dtypes: float64(5), int64(1), object(8)\n",
      "memory usage: 40.4+ MB\n"
     ]
    }
   ],
   "source": [
    "#remove ID attribute (not valuable for analysis)\n",
    "data.pop('ID')\n",
    "\n",
    "#get basic information such as number of rows, columns, data types and null values\n",
    "data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "#there are missing values in the name column (only 4)\n",
    "#there are missing values in the usd pledged column\n",
    "#the usd pledged column is the same as the usd_pledged_real column, \n",
    "#but they were converted using differnt APIs\n",
    "#therefore, I'm going to delete the usd pledged column which\n",
    "#is missing values\n",
    "\n",
    "f = data.pop('usd pledged')\n",
    "\n",
    "#since there are only 4 name values that are null and we will \n",
    "#remove the name attribute anyway before running any ML algos,\n",
    "#I will leave those records for initial analysis and visualizations"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Adding attributes:\n",
    "* month: month campaign started\n",
    "* length: time of campaign\n",
    "* year: year of campaign \n",
    "* percent_goal: % of goal reached\n",
    "* avg_contribute: avg. contribution size per campaign "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "#add start month attribute \n",
    "def getmonths(df, column):\n",
    "    months = []\n",
    "    for i in range(len(df)):\n",
    "        date = df.loc[i, column]\n",
    "        if date[5:7] == '01':\n",
    "            months.append('Jan')\n",
    "        if date[5:7] == '02':\n",
    "            months.append('Feb')\n",
    "        if date[5:7] == '03':\n",
    "            months.append('Mar')\n",
    "        if date[5:7] == '04':\n",
    "            months.append('Apr')\n",
    "        if date[5:7] == '05':\n",
    "            months.append('May')\n",
    "        if date[5:7] == '06':\n",
    "            months.append('Jun')\n",
    "        if date[5:7] == '07':\n",
    "            months.append('Jul')\n",
    "        if date[5:7] == '08':\n",
    "            months.append('Aug')\n",
    "        if date[5:7] == '09':\n",
    "            months.append('Sept')\n",
    "        if date[5:7] == '10':\n",
    "            months.append('Oct')\n",
    "        if date[5:7] == '11':\n",
    "            months.append('Nov')\n",
    "        if date[5:7] == '12':\n",
    "            months.append('Dec')\n",
    "    return months\n",
    "\n",
    "months = getmonths(data, 'launched')\n",
    "data['month'] = months\n",
    "            "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "#add length of campaign and year attribute\n",
    "import datetime as dt\n",
    "from datetime import datetime, timedelta\n",
    "\n",
    "lengths = []\n",
    "years = []\n",
    "for i in range(len(data)):\n",
    "    start = data.loc[i, 'launched']\n",
    "    end = data.loc[i, 'deadline'].replace('-', '')\n",
    "    start = start.replace('-', '')\n",
    "    end = end.replace('-', '')\n",
    "    temp = start.split()\n",
    "    start = str(temp[0])\n",
    "    end = pd.to_datetime(end, format='%Y%m%d')\n",
    "    start = pd.to_datetime(start, format='%Y%m%d')\n",
    "    start = start.date()\n",
    "    end = end.date()\n",
    "    temp = str(start)\n",
    "    year = temp[0:4]\n",
    "    years.append(year)\n",
    "    difference = end - start\n",
    "    conv = str(difference)\n",
    "    days = int(conv[0:2])\n",
    "    lengths.append(days)\n",
    "\n",
    "data['length'] = lengths\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "data['year'] = years"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "#I will remove 'pledged' and 'goal' since these are\n",
    "#the same as the usd columns (just unconverted to usd)\n",
    "\n",
    "data.pop('goal')\n",
    "data.pop('pledged')\n",
    "\n",
    "#rename remaining pledged and goal columns for simplicity and legibility \n",
    "data = data.rename(columns={'usd_pledged_real' : 'pledged', 'usd_goal_real': 'goal'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "#add % to goal and avg_contribute \n",
    "\n",
    "percents = []\n",
    "averages = []\n",
    "for i in range(len(data)):\n",
    "    if data.loc[i, 'pledged'] < 1 or data.loc[i, 'goal'] < 1 or data.loc[i, 'backers'] < 1:\n",
    "        percents.append(0)\n",
    "        averages.append(0)\n",
    "    else:\n",
    "        goal = data.loc[i, 'goal']\n",
    "        pledged = data.loc[i, 'pledged']\n",
    "        backers = data.loc[i, 'backers']\n",
    "        percent = round((pledged / goal) * 100)\n",
    "        average = round(pledged/backers)\n",
    "        percents.append(percent)\n",
    "        averages.append(average)\n",
    "        \n",
    "    \n",
    "data['percent_goal'] = percents\n",
    "data['avg_contribute'] = averages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "#drop records that show the year as 1970 (some sort of mistake in the dataset)\n",
    "\n",
    "for i in range(len(data)):\n",
    "    if data.loc[i, 'year'] == '1970':\n",
    "        data = data.drop(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fd6a7643520>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Campaign state will be the class attribute, so I want to \n",
    "#see the distribution of states\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "states = data['state'].value_counts()\n",
    "display(states.plot(kind = 'pie'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "#because the vast majority of campaigns either failed or were successfule\n",
    "#I am going to remove records with other outcome states (suspended, live, undefined, canceled)\n",
    "\n",
    "data = data.drop(data[(data.state != 'successful') & (data.state != 'failed')].index)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Reviewing summary statistics for each column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "category: object\n",
      "Product Design     18680\n",
      "Documentary        14523\n",
      "Music              12633\n",
      "Tabletop Games     11744\n",
      "Shorts             11394\n",
      "                   ...  \n",
      "Residencies           68\n",
      "Letterpress           46\n",
      "Chiptune              33\n",
      "Literary Spaces       19\n",
      "Taxidermy             10\n",
      "Name: category, Length: 159, dtype: int64\n",
      "\n",
      "main_category: object\n",
      "Film & Video    56527\n",
      "Music           45949\n",
      "Publishing      35445\n",
      "Games           28521\n",
      "Technology      27050\n",
      "Art             25641\n",
      "Design          25364\n",
      "Food            22054\n",
      "Fashion         19775\n",
      "Theater         10242\n",
      "Comics           9878\n",
      "Photography      9689\n",
      "Crafts           7818\n",
      "Journalism       4149\n",
      "Dance            3573\n",
      "Name: main_category, dtype: int64\n",
      "\n",
      "currency: object\n",
      "USD    261511\n",
      "GBP     29476\n",
      "EUR     14378\n",
      "CAD     12375\n",
      "AUD      6621\n",
      "SEK      1510\n",
      "MXN      1411\n",
      "NZD      1274\n",
      "DKK       929\n",
      "CHF       652\n",
      "NOK       584\n",
      "HKD       477\n",
      "SGD       454\n",
      "JPY        23\n",
      "Name: currency, dtype: int64\n",
      "\n",
      "deadline: object\n",
      "2014-08-08    612\n",
      "2014-08-10    480\n",
      "2014-08-07    460\n",
      "2015-05-01    419\n",
      "2014-08-09    396\n",
      "             ... \n",
      "2009-05-26      1\n",
      "2009-08-03      1\n",
      "2009-07-31      1\n",
      "2009-08-27      1\n",
      "2009-06-04      1\n",
      "Name: deadline, Length: 3102, dtype: int64\n",
      "\n",
      "launched: object\n",
      "2012-03-22 01:05:44    2\n",
      "2016-07-28 16:37:19    2\n",
      "2013-06-11 23:10:27    2\n",
      "2014-08-20 23:25:21    2\n",
      "2013-10-14 21:29:23    2\n",
      "                      ..\n",
      "2015-11-12 18:32:22    1\n",
      "2017-07-08 23:43:21    1\n",
      "2011-05-24 17:58:08    1\n",
      "2013-06-11 14:00:03    1\n",
      "2017-05-12 01:10:53    1\n",
      "Name: launched, Length: 331255, dtype: int64\n",
      "\n",
      "state: object\n",
      "failed        197719\n",
      "successful    133956\n",
      "Name: state, dtype: int64\n",
      "\n",
      "backers: numeric\n",
      "count    331675.000000\n",
      "mean        116.381581\n",
      "std         965.427268\n",
      "min           0.000000\n",
      "25%           2.000000\n",
      "50%          15.000000\n",
      "75%          63.000000\n",
      "max      219382.000000\n",
      "Name: backers, dtype: float64\n",
      "\n",
      "country: object\n",
      "US      261360\n",
      "GB       29454\n",
      "CA       12370\n",
      "AU        6616\n",
      "DE        3436\n",
      "FR        2520\n",
      "NL        2411\n",
      "IT        2369\n",
      "ES        1873\n",
      "SE        1509\n",
      "MX        1411\n",
      "NZ        1274\n",
      "DK         926\n",
      "IE         683\n",
      "CH         652\n",
      "NO         582\n",
      "BE         523\n",
      "AT         485\n",
      "HK         477\n",
      "SG         454\n",
      "N,0\"       210\n",
      "LU          57\n",
      "JP          23\n",
      "Name: country, dtype: int64\n",
      "\n",
      "pledged: numeric\n",
      "count    3.316750e+05\n",
      "mean     9.943461e+03\n",
      "std      9.673293e+04\n",
      "min      0.000000e+00\n",
      "25%      5.000000e+01\n",
      "50%      7.880000e+02\n",
      "75%      4.608000e+03\n",
      "max      2.033899e+07\n",
      "Name: pledged, dtype: float64\n",
      "\n",
      "goal: numeric\n",
      "count    3.316750e+05\n",
      "mean     4.151000e+04\n",
      "std      1.108930e+06\n",
      "min      1.000000e-02\n",
      "25%      2.000000e+03\n",
      "50%      5.000000e+03\n",
      "75%      1.500000e+04\n",
      "max      1.663614e+08\n",
      "Name: goal, dtype: float64\n",
      "\n",
      "month: object\n",
      "Jul     32007\n",
      "Mar     30100\n",
      "Oct     29375\n",
      "May     29175\n",
      "Jun     28973\n",
      "Apr     28577\n",
      "Nov     28504\n",
      "Aug     28405\n",
      "Sept    27406\n",
      "Feb     26277\n",
      "Jan     24413\n",
      "Dec     18463\n",
      "Name: month, dtype: int64\n",
      "\n",
      "length: numeric\n",
      "count    331675.000000\n",
      "mean         33.954875\n",
      "std          12.713332\n",
      "min           1.000000\n",
      "25%          30.000000\n",
      "50%          30.000000\n",
      "75%          36.000000\n",
      "max          92.000000\n",
      "Name: length, dtype: float64\n",
      "\n",
      "year: object\n",
      "2015    65272\n",
      "2014    59306\n",
      "2016    49292\n",
      "2017    43419\n",
      "2013    41101\n",
      "2012    38480\n",
      "2011    24049\n",
      "2010     9577\n",
      "2009     1179\n",
      "Name: year, dtype: int64\n",
      "\n",
      "percent_goal: numeric\n",
      "count    3.316750e+05\n",
      "mean     3.420937e+02\n",
      "std      2.814949e+04\n",
      "min      0.000000e+00\n",
      "25%      1.000000e+00\n",
      "50%      2.000000e+01\n",
      "75%      1.090000e+02\n",
      "max      1.042779e+07\n",
      "Name: percent_goal, dtype: float64\n",
      "\n",
      "avg_contribute: numeric\n",
      "count    331675.000000\n",
      "mean         66.083654\n",
      "std         131.609984\n",
      "min           0.000000\n",
      "25%          17.000000\n",
      "50%          42.000000\n",
      "75%          78.000000\n",
      "max       10000.000000\n",
      "Name: avg_contribute, dtype: float64\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#function to output summary stats for numeric attributes\n",
    "#and unique value counts for object attributes\n",
    "\n",
    "def sum_stats(data, types):\n",
    "    for i in range(len(types)):\n",
    "        \n",
    "        #do not want to include name, because each name value will be unique\n",
    "        if types[i] == 'object' and types.index[i] != 'name':\n",
    "            print('{}: object'.format(types.index[i]))\n",
    "            print(data[types.index[i]].value_counts())\n",
    "            print()\n",
    "        if types[i] == 'int64' or types[i] == 'float64':\n",
    "            print('{}: numeric'.format(types.index[i]))\n",
    "            print(data[types.index[i]].describe())\n",
    "            print()\n",
    "            \n",
    "data_types = data.dtypes\n",
    "sum_stats(data, data_types)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>backers</th>\n",
       "      <th>pledged</th>\n",
       "      <th>goal</th>\n",
       "      <th>length</th>\n",
       "      <th>percent_goal</th>\n",
       "      <th>avg_contribute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>331675.000000</td>\n",
       "      <td>3.316750e+05</td>\n",
       "      <td>3.316750e+05</td>\n",
       "      <td>331675.000000</td>\n",
       "      <td>3.316750e+05</td>\n",
       "      <td>331675.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>116.381581</td>\n",
       "      <td>9.943461e+03</td>\n",
       "      <td>4.151000e+04</td>\n",
       "      <td>33.954875</td>\n",
       "      <td>3.420937e+02</td>\n",
       "      <td>66.083654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>965.427268</td>\n",
       "      <td>9.673293e+04</td>\n",
       "      <td>1.108930e+06</td>\n",
       "      <td>12.713332</td>\n",
       "      <td>2.814949e+04</td>\n",
       "      <td>131.609984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>1.000000e-02</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.000000e+01</td>\n",
       "      <td>2.000000e+03</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>1.000000e+00</td>\n",
       "      <td>17.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>15.000000</td>\n",
       "      <td>7.880000e+02</td>\n",
       "      <td>5.000000e+03</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>2.000000e+01</td>\n",
       "      <td>42.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>63.000000</td>\n",
       "      <td>4.608000e+03</td>\n",
       "      <td>1.500000e+04</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>1.090000e+02</td>\n",
       "      <td>78.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>219382.000000</td>\n",
       "      <td>2.033899e+07</td>\n",
       "      <td>1.663614e+08</td>\n",
       "      <td>92.000000</td>\n",
       "      <td>1.042779e+07</td>\n",
       "      <td>10000.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             backers       pledged          goal         length  percent_goal  \\\n",
       "count  331675.000000  3.316750e+05  3.316750e+05  331675.000000  3.316750e+05   \n",
       "mean      116.381581  9.943461e+03  4.151000e+04      33.954875  3.420937e+02   \n",
       "std       965.427268  9.673293e+04  1.108930e+06      12.713332  2.814949e+04   \n",
       "min         0.000000  0.000000e+00  1.000000e-02       1.000000  0.000000e+00   \n",
       "25%         2.000000  5.000000e+01  2.000000e+03      30.000000  1.000000e+00   \n",
       "50%        15.000000  7.880000e+02  5.000000e+03      30.000000  2.000000e+01   \n",
       "75%        63.000000  4.608000e+03  1.500000e+04      36.000000  1.090000e+02   \n",
       "max    219382.000000  2.033899e+07  1.663614e+08      92.000000  1.042779e+07   \n",
       "\n",
       "       avg_contribute  \n",
       "count   331675.000000  \n",
       "mean        66.083654  \n",
       "std        131.609984  \n",
       "min          0.000000  \n",
       "25%         17.000000  \n",
       "50%         42.000000  \n",
       "75%         78.000000  \n",
       "max      10000.000000  "
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#descriptive statistics for numeric attributes\n",
    "data.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Average campaign length is 34 days\n",
    "* Average goal is $\\$$41,510\n",
    "* Average pledged is 9,943\n",
    "* Each campaign has an average of 116 backers\n",
    "* Average contribution per campaign is 73"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "#writing cleaned data to another file (so I don't need to keep running above code)\n",
    "\n",
    "outfile = open('clean_kickstarter.csv', 'w')\n",
    "data.to_csv(outfile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "outfile.close()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Phase Two: Data Visualizations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 425,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>category</th>\n",
       "      <th>main_category</th>\n",
       "      <th>currency</th>\n",
       "      <th>state</th>\n",
       "      <th>backers</th>\n",
       "      <th>country</th>\n",
       "      <th>pledged</th>\n",
       "      <th>goal</th>\n",
       "      <th>month</th>\n",
       "      <th>length</th>\n",
       "      <th>year</th>\n",
       "      <th>percent_goal</th>\n",
       "      <th>avg_contribute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>The Songs of Adelaide &amp; Abullah</td>\n",
       "      <td>Poetry</td>\n",
       "      <td>Publishing</td>\n",
       "      <td>GBP</td>\n",
       "      <td>failed</td>\n",
       "      <td>0</td>\n",
       "      <td>GB</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1533.95</td>\n",
       "      <td>Aug</td>\n",
       "      <td>59</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Greeting From Earth: ZGAC Arts Capsule For ET</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>15</td>\n",
       "      <td>US</td>\n",
       "      <td>2421.0</td>\n",
       "      <td>30000.00</td>\n",
       "      <td>Sept</td>\n",
       "      <td>60</td>\n",
       "      <td>2017</td>\n",
       "      <td>8.0</td>\n",
       "      <td>161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Where is Hank?</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>220.0</td>\n",
       "      <td>45000.00</td>\n",
       "      <td>Jan</td>\n",
       "      <td>45</td>\n",
       "      <td>2013</td>\n",
       "      <td>0.0</td>\n",
       "      <td>73.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ToshiCapital Rekordz Needs Help to Complete Album</td>\n",
       "      <td>Music</td>\n",
       "      <td>Music</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5000.00</td>\n",
       "      <td>Mar</td>\n",
       "      <td>30</td>\n",
       "      <td>2012</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Monarch Espresso Bar</td>\n",
       "      <td>Restaurants</td>\n",
       "      <td>Food</td>\n",
       "      <td>USD</td>\n",
       "      <td>successful</td>\n",
       "      <td>224</td>\n",
       "      <td>US</td>\n",
       "      <td>52375.0</td>\n",
       "      <td>50000.00</td>\n",
       "      <td>Feb</td>\n",
       "      <td>35</td>\n",
       "      <td>2016</td>\n",
       "      <td>105.0</td>\n",
       "      <td>234.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331670</th>\n",
       "      <td>Homemade fresh dog food, Cleveland OH</td>\n",
       "      <td>Small Batch</td>\n",
       "      <td>Food</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>4</td>\n",
       "      <td>US</td>\n",
       "      <td>154.0</td>\n",
       "      <td>6500.00</td>\n",
       "      <td>Mar</td>\n",
       "      <td>30</td>\n",
       "      <td>2017</td>\n",
       "      <td>2.0</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331671</th>\n",
       "      <td>The Tribe</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>5</td>\n",
       "      <td>US</td>\n",
       "      <td>155.0</td>\n",
       "      <td>1500.00</td>\n",
       "      <td>Jun</td>\n",
       "      <td>27</td>\n",
       "      <td>2011</td>\n",
       "      <td>10.0</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331672</th>\n",
       "      <td>Walls of Remedy- New lesbian Romantic Comedy f...</td>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>Film &amp; Video</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>20.0</td>\n",
       "      <td>15000.00</td>\n",
       "      <td>Jul</td>\n",
       "      <td>46</td>\n",
       "      <td>2010</td>\n",
       "      <td>0.0</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331673</th>\n",
       "      <td>BioDefense Education Kit</td>\n",
       "      <td>Technology</td>\n",
       "      <td>Technology</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>6</td>\n",
       "      <td>US</td>\n",
       "      <td>200.0</td>\n",
       "      <td>15000.00</td>\n",
       "      <td>Jan</td>\n",
       "      <td>31</td>\n",
       "      <td>2016</td>\n",
       "      <td>1.0</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331674</th>\n",
       "      <td>Nou Renmen Ayiti!  We Love Haiti!</td>\n",
       "      <td>Performance Art</td>\n",
       "      <td>Art</td>\n",
       "      <td>USD</td>\n",
       "      <td>failed</td>\n",
       "      <td>17</td>\n",
       "      <td>US</td>\n",
       "      <td>524.0</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>Jul</td>\n",
       "      <td>28</td>\n",
       "      <td>2011</td>\n",
       "      <td>26.0</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>331465 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                     name         category  \\\n",
       "0                         The Songs of Adelaide & Abullah           Poetry   \n",
       "1           Greeting From Earth: ZGAC Arts Capsule For ET   Narrative Film   \n",
       "2                                          Where is Hank?   Narrative Film   \n",
       "3       ToshiCapital Rekordz Needs Help to Complete Album            Music   \n",
       "4                                    Monarch Espresso Bar      Restaurants   \n",
       "...                                                   ...              ...   \n",
       "331670              Homemade fresh dog food, Cleveland OH      Small Batch   \n",
       "331671                                          The Tribe   Narrative Film   \n",
       "331672  Walls of Remedy- New lesbian Romantic Comedy f...   Narrative Film   \n",
       "331673                           BioDefense Education Kit       Technology   \n",
       "331674                  Nou Renmen Ayiti!  We Love Haiti!  Performance Art   \n",
       "\n",
       "       main_category currency       state  backers country  pledged      goal  \\\n",
       "0         Publishing      GBP      failed        0      GB      0.0   1533.95   \n",
       "1       Film & Video      USD      failed       15      US   2421.0  30000.00   \n",
       "2       Film & Video      USD      failed        3      US    220.0  45000.00   \n",
       "3              Music      USD      failed        1      US      1.0   5000.00   \n",
       "4               Food      USD  successful      224      US  52375.0  50000.00   \n",
       "...              ...      ...         ...      ...     ...      ...       ...   \n",
       "331670          Food      USD      failed        4      US    154.0   6500.00   \n",
       "331671  Film & Video      USD      failed        5      US    155.0   1500.00   \n",
       "331672  Film & Video      USD      failed        1      US     20.0  15000.00   \n",
       "331673    Technology      USD      failed        6      US    200.0  15000.00   \n",
       "331674           Art      USD      failed       17      US    524.0   2000.00   \n",
       "\n",
       "       month  length  year  percent_goal  avg_contribute  \n",
       "0        Aug      59  2015           0.0             0.0  \n",
       "1       Sept      60  2017           8.0           161.0  \n",
       "2        Jan      45  2013           0.0            73.0  \n",
       "3        Mar      30  2012           0.0             1.0  \n",
       "4        Feb      35  2016         105.0           234.0  \n",
       "...      ...     ...   ...           ...             ...  \n",
       "331670   Mar      30  2017           2.0            38.0  \n",
       "331671   Jun      27  2011          10.0            31.0  \n",
       "331672   Jul      46  2010           0.0            20.0  \n",
       "331673   Jan      31  2016           1.0            33.0  \n",
       "331674   Jul      28  2011          26.0            31.0  \n",
       "\n",
       "[331465 rows x 14 columns]"
      ]
     },
     "execution_count": 425,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#load cleaned data into pandas dataframe\n",
    "\n",
    "import csv\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#import data into a dataframe and view\n",
    "\n",
    "data = pd.read_csv('clean_kickstarter.csv')\n",
    "data.pop('Unnamed: 0')\n",
    "data.pop('deadline')\n",
    "data.pop('launched')\n",
    "\n",
    "#some records have an erroneous country value, so I am removing those records\n",
    "data = data.drop(data[(data.country == 'N,0\"')].index)\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 369,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "40% of campaigns were successful\n",
      "60% of campaigns failed\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#visualizing counts of the different campaign states\n",
    "states = data['state'].value_counts()\n",
    "states.plot(kind='pie')\n",
    "\n",
    "#calculating percentages of campaign states\n",
    "failed = data[data.state == 'failed'].shape[0]\n",
    "successful = data[data.state == 'successful'].shape[0]\n",
    "p_failed = round((failed / (successful + failed)) * 100)\n",
    "p_success = round((successful / (successful + failed)) * 100)\n",
    "print('{}% of campaigns were successful\\n{}% of campaigns failed'.format(p_success, p_failed))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* 40% of campaigns were successful\n",
    "* 60% of campaigns failed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 468,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t\t\t\tCampaign Counts\n",
      "========================================================================\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#figure to visualize distributions for relevant categorical attributes\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "#returns the counts per columns as a dataframe\n",
    "def view_counts(column):\n",
    "    if column == 'main_category' or column == 'country':\n",
    "        holder = data[column].value_counts()\n",
    "    if column == 'year' or column == 'month':    \n",
    "        holder = data[column].value_counts(sort = False)\n",
    "    holder = holder.to_frame()\n",
    "    if column == 'month':\n",
    "        holder = holder.reindex(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']) \n",
    "    index = holder.index\n",
    "    return holder\n",
    "\n",
    "cat = view_counts('main_category')\n",
    "month = view_counts('month')\n",
    "year = view_counts('year')\n",
    "country = view_counts('country')\n",
    "\n",
    "fig, name = plt.subplots(2,2, figsize=(8,8))\n",
    "cat.plot(ax=name[1, 0], kind = 'bar', title = 'Campaigns by Category')\n",
    "country.plot(ax=name[1, 1], kind = 'bar', title = 'Campaigns by Country')\n",
    "month.plot(ax=name[0, 0], kind = 'bar', title ='Campaigns by Month')\n",
    "year.plot(ax=name[0, 1], kind = 'bar', title = 'Campaigns by Year')\n",
    "print('\\t\\t\\t\\tCampaign Counts')\n",
    "print('=================='*4)\n",
    "fig.tight_layout(pad=1.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Film & Video is the most popular campaign category followed by Music and Publishing\n",
    "* Vast majority of campaigns take place in the US\n",
    "* Most popular month to host a campaign is in July\n",
    "* The number of campaigns on kickstarter peaked in 2015 and then fell until 2017"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 555,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t\tNumeric Attribute Distributions & Bins\n",
      "========================================================================\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 6 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#figure to visualize distributions of relevant numerical attributes\n",
    "\n",
    "backers = data['backers']\n",
    "pledged = data['pledged']\n",
    "goal = data['goal']\n",
    "length = data['length']\n",
    "p_goal = data['percent_goal']\n",
    "avg_contribute = data['avg_contribute']\n",
    "\n",
    "figure, numeric = plt.subplots(3,2, figsize=(8,8))\n",
    "backers.plot(ax=numeric[0, 0], style = '.', title = 'Backers Count Per Campaign').set_xticks([])\n",
    "length.plot(ax=numeric[0, 1], style = '.', title = 'Length Per Campaign').set_xticks([])\n",
    "goal.plot(ax=numeric[1, 0], style = '.', title = 'Goal Per Campaign').set_xticks([])\n",
    "pledged.plot(ax=numeric[1, 1], style = '.', title = 'Amount Pledged Per Campaign').set_xticks([])\n",
    "p_goal.plot(ax=numeric[2, 0], style = '.', title = '% to Goal Per Campaign').set_xticks([])\n",
    "avg_contribute.plot(ax=numeric[2, 1], style = '.', title = 'Avg. Contribution Per Campaign').set_xticks([])\n",
    "\n",
    "print('\\t\\tNumeric Attribute Distributions & Bins')\n",
    "print('=================='*4)\n",
    "figure.tight_layout(pad=1.0)\n",
    "\n",
    "#visualizing numeric attribute bins\n",
    "\n",
    "backer_bins = pd.qcut(data['backers'],4, labels = ['1-2', '2-15', '15-63', '63+'])\n",
    "b = backer_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "p_goal_bins = pd.qcut(data['percent_goal'],4, labels = ['0%-1%', '1%-20%', '20%-110%', '110%+'])\n",
    "p = p_goal_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "length_bins = pd.qcut(data['length'], 2, labels = ['under 30 days', '30-92 days'])\n",
    "c = length_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "goal_bins = pd.qcut(data['goal'], 4, labels= ['$0-$2K', '$2K-$5K', '$5K-$15K', '15K+'])\n",
    "g = goal_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "pledged_bins = pd.qcut(data['pledged'], 4, labels = ['$0-$50', '$50-$787', '$787-$4.6K', '4.6K+'])\n",
    "z = pledged_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "avgc_bins = pd.qcut(data['avg_contribute'], 4, labels = ['$0-$17', '$17-$42', '$42-$78', '78+'])\n",
    "k = avgc_bins.value_counts(sort=False).to_frame()\n",
    "\n",
    "\n",
    "fig3, name = plt.subplots(2,3, figsize=(8,6))\n",
    "p.plot(ax=name[0, 0], kind = 'bar', title = '% to Goal Bins')\n",
    "b.plot(ax=name[0, 1], kind = 'bar', title = 'Backer Bins')\n",
    "c.plot(ax=name[0, 2], kind = 'bar', title = 'Length Bins')\n",
    "g.plot(ax=name[1, 0], kind = 'bar', title = 'Goal Bins')\n",
    "z.plot(ax=name[1, 1], kind = 'bar', title = 'Pledged Bins')\n",
    "k.plot(ax=name[1, 2], kind = 'bar', title = 'Avg. Contribute Bins')\n",
    "\n",
    "\n",
    "fig3.tight_layout(pad=2.0)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Vast majority of campaigns were under 30 days in length and the remaining were between 30 and 92 days in length\n",
    "* The vast majority of campaigns have below 63 backers, but a few outliers\n",
    "    had many more\n",
    "* Most campaigns had a goal of under $\\$$15K, but a few outliers had much higher goals\n",
    "* Around half of campaigns raised 20% or less of their goal, while a few outliers far exceeded their goals\n",
    "* Around half of campaigns raised under $\\$$787, a fourth raised between $\\$$787 and $\\$$4.6K and another fourth raised above $\\$$4.6K\n",
    "* The average size of an individual contribtuon for most campaigns was under $\\$$78"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 545,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\t\t\t\tStates By Year and Month\n",
      "==========================================================================================\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#show YOY states and month vs states\n",
    "\n",
    "#YOY STATES\n",
    "#counts the number of failed and successful campaigns per year\n",
    "def year_counts(a):\n",
    "    f = data[(data.state == 'failed') & (data.year == a)].shape[0]\n",
    "    s = data[(data.state == 'successful') & (data.year == a)].shape[0]\n",
    "    return f, s\n",
    "\n",
    "#stores year counts into a dict\n",
    "year_info = {}\n",
    "for i in range(2009, 2018):\n",
    "    q = str(i)\n",
    "    b = year_counts(i)\n",
    "    year_info[q] = b\n",
    "\n",
    "#turns dict into a dataframe & renames the columns    \n",
    "state_year = pd.DataFrame.from_dict(year_info, orient='index')\n",
    "state_year = state_year.rename(columns={0:'failed',1:'successful'})\n",
    "state_year = state_year.reset_index()\n",
    "\n",
    "#adds total campaign count column to dataframe\n",
    "totals = []\n",
    "for i in range(len(state_year)):\n",
    "    f = state_year.loc[i, 'failed']\n",
    "    s = state_year.loc[i, 'successful']\n",
    "    total = f + s\n",
    "    totals.append(total)\n",
    "state_year['total'] = totals\n",
    "state_year = state_year.set_index('index')\n",
    "\n",
    "\n",
    "#MONTH VS STATES\n",
    "#counts failed and successful campaigns per month\n",
    "def month_counts(a):\n",
    "    f = data[(data.state == 'failed') & (data.month == a)].shape[0]\n",
    "    s = data[(data.state == 'successful') & (data.month == a)].shape[0]\n",
    "    return f, s\n",
    "\n",
    "#creates dict to store month counts\n",
    "month_info = {}\n",
    "month_info['Jan'] = month_counts('Jan')\n",
    "month_info['Feb'] = month_counts('Feb')\n",
    "month_info['Mar'] = month_counts('Mar')\n",
    "month_info['Apr'] = month_counts('Apr')\n",
    "month_info['May'] = month_counts('May')\n",
    "month_info['Jun'] = month_counts('Jun')\n",
    "month_info['Jul'] = month_counts('Jul')\n",
    "month_info['Aug'] = month_counts('Aug')\n",
    "month_info['Sept'] = month_counts('Sept')\n",
    "month_info['Oct'] = month_counts('Oct')\n",
    "month_info['Nov'] = month_counts('Nov')\n",
    "month_info['Dec'] = month_counts('Dec')\n",
    "\n",
    "#turns dict into a dataframe and changes column names\n",
    "state_month = pd.DataFrame.from_dict(month_info, orient='index')\n",
    "state_month = state_month.rename(columns={0:'failed',1:'successful'})\n",
    "state_month = state_month.reset_index()\n",
    "\n",
    "#adds a total column to the month dataframe\n",
    "totals = []\n",
    "for i in range(len(state_month)):\n",
    "    f = state_month.loc[i, 'failed']\n",
    "    s = state_month.loc[i, 'successful']\n",
    "    total = f + s\n",
    "    totals.append(total)\n",
    "state_month['total'] = totals\n",
    "state_month = state_month.set_index('index')\n",
    "\n",
    "\n",
    "print('\\t\\t\\t\\tStates By Year and Month')\n",
    "print('=================='*5)\n",
    "\n",
    "#creates subplot to view campaign state by YOY and by month\n",
    "fig4, name = plt.subplots(1,2, figsize=(12,4))\n",
    "state_year.plot(ax=name[0], kind = 'line', title = 'Campaign Counts YOY').set_xlabel('Year')\n",
    "state_month.plot(ax=name[1], kind = 'line', title = 'Campaign Counts by Month').set_xlabel('Month')\n",
    "\n",
    "#updates state by year table to include percentages of failed vs successful\n",
    "state_year = state_year.reset_index()\n",
    "p_failed = []\n",
    "p_succeeded = []\n",
    "for i in range(len(state_year)):\n",
    "    failed = state_year.loc[i, 'failed']\n",
    "    succ = state_year.loc[i, 'successful']\n",
    "    total = failed + succ\n",
    "    p_f = round((failed/total) * 100)\n",
    "    p_s = round((succ/total) * 100)\n",
    "    p_failed.append(p_f)\n",
    "    p_succeeded.append(p_s)\n",
    "state_year['%_failed'] = p_failed\n",
    "state_year['%_success'] = p_succeeded\n",
    "\n",
    "state_year = state_year.rename(columns={'index':'Year'})\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Up until 2011, failed and successful campaigns were growing at the same rate\n",
    "* Starting 2013, the rate of failed campaigns grows significantly over successful campaigns\n",
    "    until 2015, when the rate of failed campaigns trends down closer to the number of\n",
    "    successful campaigns\n",
    "* Overall campaign counts on the platform rises until 2015, after which time it starts to drop\n",
    "* Successful campaigns peak in March \n",
    "* There is a peak in campaigns on the platform in July\n",
    "* Campaigns launched in July have the lowest rate of success, while campaigns launched in March\n",
    "    have the highest rate of success\n",
    "\n",
    "Note: See dataframes of above line graphs below for raw numbers and percentages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 541,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table><tr style=\"background-color:white;\"><td><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>failed</th>\n",
       "      <th>successful</th>\n",
       "      <th>total</th>\n",
       "      <th>%_failed</th>\n",
       "      <th>%_success</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2009</td>\n",
       "      <td>600</td>\n",
       "      <td>579</td>\n",
       "      <td>1179</td>\n",
       "      <td>51.0</td>\n",
       "      <td>49.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2010</td>\n",
       "      <td>4984</td>\n",
       "      <td>4593</td>\n",
       "      <td>9577</td>\n",
       "      <td>52.0</td>\n",
       "      <td>48.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2011</td>\n",
       "      <td>11878</td>\n",
       "      <td>12171</td>\n",
       "      <td>24049</td>\n",
       "      <td>49.0</td>\n",
       "      <td>51.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012</td>\n",
       "      <td>20588</td>\n",
       "      <td>17892</td>\n",
       "      <td>38480</td>\n",
       "      <td>54.0</td>\n",
       "      <td>46.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013</td>\n",
       "      <td>21686</td>\n",
       "      <td>19402</td>\n",
       "      <td>41088</td>\n",
       "      <td>53.0</td>\n",
       "      <td>47.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2014</td>\n",
       "      <td>38199</td>\n",
       "      <td>21106</td>\n",
       "      <td>59305</td>\n",
       "      <td>64.0</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2015</td>\n",
       "      <td>44301</td>\n",
       "      <td>20971</td>\n",
       "      <td>65272</td>\n",
       "      <td>68.0</td>\n",
       "      <td>32.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2016</td>\n",
       "      <td>30421</td>\n",
       "      <td>18675</td>\n",
       "      <td>49096</td>\n",
       "      <td>62.0</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2017</td>\n",
       "      <td>24957</td>\n",
       "      <td>18462</td>\n",
       "      <td>43419</td>\n",
       "      <td>57.0</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div></td><td><div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>month</th>\n",
       "      <th>failed</th>\n",
       "      <th>successful</th>\n",
       "      <th>total</th>\n",
       "      <th>%_failed</th>\n",
       "      <th>%_success</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Jan</td>\n",
       "      <td>14933</td>\n",
       "      <td>9480</td>\n",
       "      <td>24413</td>\n",
       "      <td>61.0</td>\n",
       "      <td>39.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Feb</td>\n",
       "      <td>15270</td>\n",
       "      <td>11003</td>\n",
       "      <td>26273</td>\n",
       "      <td>58.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Mar</td>\n",
       "      <td>17219</td>\n",
       "      <td>12812</td>\n",
       "      <td>30031</td>\n",
       "      <td>57.0</td>\n",
       "      <td>43.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apr</td>\n",
       "      <td>16418</td>\n",
       "      <td>12034</td>\n",
       "      <td>28452</td>\n",
       "      <td>58.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>May</td>\n",
       "      <td>17108</td>\n",
       "      <td>12055</td>\n",
       "      <td>29163</td>\n",
       "      <td>59.0</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Jun</td>\n",
       "      <td>17200</td>\n",
       "      <td>11773</td>\n",
       "      <td>28973</td>\n",
       "      <td>59.0</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Jul</td>\n",
       "      <td>20326</td>\n",
       "      <td>11681</td>\n",
       "      <td>32007</td>\n",
       "      <td>64.0</td>\n",
       "      <td>36.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Aug</td>\n",
       "      <td>17585</td>\n",
       "      <td>10820</td>\n",
       "      <td>28405</td>\n",
       "      <td>62.0</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Sept</td>\n",
       "      <td>16175</td>\n",
       "      <td>11231</td>\n",
       "      <td>27406</td>\n",
       "      <td>59.0</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Oct</td>\n",
       "      <td>17025</td>\n",
       "      <td>12350</td>\n",
       "      <td>29375</td>\n",
       "      <td>58.0</td>\n",
       "      <td>42.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Nov</td>\n",
       "      <td>16734</td>\n",
       "      <td>11770</td>\n",
       "      <td>28504</td>\n",
       "      <td>59.0</td>\n",
       "      <td>41.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Dec</td>\n",
       "      <td>11621</td>\n",
       "      <td>6842</td>\n",
       "      <td>18463</td>\n",
       "      <td>63.0</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div></td></tr></table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 541,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#dataframes supporting above line graphs\n",
    "\n",
    "from IPython.core.display import HTML\n",
    "\n",
    "def multi_table(table_list):\n",
    "    ''' Acceps a list of IpyTable objects and returns a table which contains each IpyTable in a cell\n",
    "    '''\n",
    "    return HTML(\n",
    "        '<table><tr style=\"background-color:white;\">' + \n",
    "        ''.join(['<td>' + table._repr_html_() + '</td>' for table in table_list]) +\n",
    "        '</tr></table>'\n",
    "    )\n",
    "\n",
    "state_month = state_month.reset_index()\n",
    "\n",
    "#add percentage of success and fail to the month vs state dataframe\n",
    "p_suc = []\n",
    "p_fail = []\n",
    "for i in range(len(state_month)):\n",
    "    f = state_month.loc[i, 'failed']\n",
    "    s = state_month.loc[i, 'successful']\n",
    "    t = state_month.loc[i, 'total']\n",
    "    p_s = round((s / t) * 100)\n",
    "    p_f = round((f / t) * 100)\n",
    "    p_suc.append(p_s)\n",
    "    p_fail.append(p_f)\n",
    "\n",
    "state_month['%_failed'] = p_fail  \n",
    "state_month['%_success'] = p_suc\n",
    "#state_month.pop('level_0')\n",
    "state_month = state_month.rename(columns={'index': 'month'})\n",
    "multi_table([state_year, state_month])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 547,
   "metadata": {},
   "outputs": [],
   "source": [
    "#TODO\n",
    "#visualize: length vs state, backers vs state, category vs state, avg. contribute vs state, \n",
    "#backers vs category, avg. contribute vs category"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Phase Three: Association Rule Mining"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 648,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>state</th>\n",
       "      <th>backers</th>\n",
       "      <th>country</th>\n",
       "      <th>goal</th>\n",
       "      <th>month</th>\n",
       "      <th>length</th>\n",
       "      <th>year</th>\n",
       "      <th>avg_contribute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Poetry</td>\n",
       "      <td>failed</td>\n",
       "      <td>0</td>\n",
       "      <td>GB</td>\n",
       "      <td>1533.95</td>\n",
       "      <td>Aug</td>\n",
       "      <td>59</td>\n",
       "      <td>2015</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>15</td>\n",
       "      <td>US</td>\n",
       "      <td>30000.00</td>\n",
       "      <td>Sept</td>\n",
       "      <td>60</td>\n",
       "      <td>2017</td>\n",
       "      <td>161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>3</td>\n",
       "      <td>US</td>\n",
       "      <td>45000.00</td>\n",
       "      <td>Jan</td>\n",
       "      <td>45</td>\n",
       "      <td>2013</td>\n",
       "      <td>73.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Music</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>5000.00</td>\n",
       "      <td>Mar</td>\n",
       "      <td>30</td>\n",
       "      <td>2012</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Restaurants</td>\n",
       "      <td>successful</td>\n",
       "      <td>224</td>\n",
       "      <td>US</td>\n",
       "      <td>50000.00</td>\n",
       "      <td>Feb</td>\n",
       "      <td>35</td>\n",
       "      <td>2016</td>\n",
       "      <td>234.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331670</th>\n",
       "      <td>Small Batch</td>\n",
       "      <td>failed</td>\n",
       "      <td>4</td>\n",
       "      <td>US</td>\n",
       "      <td>6500.00</td>\n",
       "      <td>Mar</td>\n",
       "      <td>30</td>\n",
       "      <td>2017</td>\n",
       "      <td>38.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331671</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>5</td>\n",
       "      <td>US</td>\n",
       "      <td>1500.00</td>\n",
       "      <td>Jun</td>\n",
       "      <td>27</td>\n",
       "      <td>2011</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331672</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>1</td>\n",
       "      <td>US</td>\n",
       "      <td>15000.00</td>\n",
       "      <td>Jul</td>\n",
       "      <td>46</td>\n",
       "      <td>2010</td>\n",
       "      <td>20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331673</th>\n",
       "      <td>Technology</td>\n",
       "      <td>failed</td>\n",
       "      <td>6</td>\n",
       "      <td>US</td>\n",
       "      <td>15000.00</td>\n",
       "      <td>Jan</td>\n",
       "      <td>31</td>\n",
       "      <td>2016</td>\n",
       "      <td>33.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331674</th>\n",
       "      <td>Performance Art</td>\n",
       "      <td>failed</td>\n",
       "      <td>17</td>\n",
       "      <td>US</td>\n",
       "      <td>2000.00</td>\n",
       "      <td>Jul</td>\n",
       "      <td>28</td>\n",
       "      <td>2011</td>\n",
       "      <td>31.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>331465 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               category       state  backers country      goal month  length  \\\n",
       "0                Poetry      failed        0      GB   1533.95   Aug      59   \n",
       "1        Narrative Film      failed       15      US  30000.00  Sept      60   \n",
       "2        Narrative Film      failed        3      US  45000.00   Jan      45   \n",
       "3                 Music      failed        1      US   5000.00   Mar      30   \n",
       "4           Restaurants  successful      224      US  50000.00   Feb      35   \n",
       "...                 ...         ...      ...     ...       ...   ...     ...   \n",
       "331670      Small Batch      failed        4      US   6500.00   Mar      30   \n",
       "331671   Narrative Film      failed        5      US   1500.00   Jun      27   \n",
       "331672   Narrative Film      failed        1      US  15000.00   Jul      46   \n",
       "331673       Technology      failed        6      US  15000.00   Jan      31   \n",
       "331674  Performance Art      failed       17      US   2000.00   Jul      28   \n",
       "\n",
       "        year  avg_contribute  \n",
       "0       2015             0.0  \n",
       "1       2017           161.0  \n",
       "2       2013            73.0  \n",
       "3       2012             1.0  \n",
       "4       2016           234.0  \n",
       "...      ...             ...  \n",
       "331670  2017            38.0  \n",
       "331671  2011            31.0  \n",
       "331672  2010            20.0  \n",
       "331673  2016            33.0  \n",
       "331674  2011            31.0  \n",
       "\n",
       "[331465 rows x 9 columns]"
      ]
     },
     "execution_count": 648,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#making data set suitable for apriori \n",
    "\n",
    "#make a copy of the dataframe \n",
    "ap_data = data.copy()\n",
    "\n",
    "#remove attributes name, main_category, currency, pledged and % goal(not good for apriori)\n",
    "ap_data.pop('name')\n",
    "ap_data.pop('main_category')\n",
    "ap_data.pop('currency')\n",
    "ap_data.pop('pledged')\n",
    "ap_data.pop('percent_goal')\n",
    "ap_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 649,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>category</th>\n",
       "      <th>state</th>\n",
       "      <th>backers</th>\n",
       "      <th>country</th>\n",
       "      <th>goal</th>\n",
       "      <th>month</th>\n",
       "      <th>length</th>\n",
       "      <th>year</th>\n",
       "      <th>avg_contribute</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Poetry</td>\n",
       "      <td>failed</td>\n",
       "      <td>1-2</td>\n",
       "      <td>GB</td>\n",
       "      <td>$0-$2K</td>\n",
       "      <td>Aug</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2015</td>\n",
       "      <td>$0-$17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>2-15</td>\n",
       "      <td>US</td>\n",
       "      <td>15K+</td>\n",
       "      <td>Sept</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2017</td>\n",
       "      <td>78+</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>2-15</td>\n",
       "      <td>US</td>\n",
       "      <td>15K+</td>\n",
       "      <td>Jan</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2013</td>\n",
       "      <td>$42-$78</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Music</td>\n",
       "      <td>failed</td>\n",
       "      <td>1-2</td>\n",
       "      <td>US</td>\n",
       "      <td>$2K-$5K</td>\n",
       "      <td>Mar</td>\n",
       "      <td>under 30 days</td>\n",
       "      <td>2012</td>\n",
       "      <td>$0-$17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Restaurants</td>\n",
       "      <td>successful</td>\n",
       "      <td>63+</td>\n",
       "      <td>US</td>\n",
       "      <td>15K+</td>\n",
       "      <td>Feb</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2016</td>\n",
       "      <td>78+</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331670</th>\n",
       "      <td>Small Batch</td>\n",
       "      <td>failed</td>\n",
       "      <td>2-15</td>\n",
       "      <td>US</td>\n",
       "      <td>$5K-$15K</td>\n",
       "      <td>Mar</td>\n",
       "      <td>under 30 days</td>\n",
       "      <td>2017</td>\n",
       "      <td>$17-$42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331671</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>2-15</td>\n",
       "      <td>US</td>\n",
       "      <td>$0-$2K</td>\n",
       "      <td>Jun</td>\n",
       "      <td>under 30 days</td>\n",
       "      <td>2011</td>\n",
       "      <td>$17-$42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331672</th>\n",
       "      <td>Narrative Film</td>\n",
       "      <td>failed</td>\n",
       "      <td>1-2</td>\n",
       "      <td>US</td>\n",
       "      <td>$5K-$15K</td>\n",
       "      <td>Jul</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2010</td>\n",
       "      <td>$17-$42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331673</th>\n",
       "      <td>Technology</td>\n",
       "      <td>failed</td>\n",
       "      <td>2-15</td>\n",
       "      <td>US</td>\n",
       "      <td>$5K-$15K</td>\n",
       "      <td>Jan</td>\n",
       "      <td>30-92 days</td>\n",
       "      <td>2016</td>\n",
       "      <td>$17-$42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>331674</th>\n",
       "      <td>Performance Art</td>\n",
       "      <td>failed</td>\n",
       "      <td>15-63</td>\n",
       "      <td>US</td>\n",
       "      <td>$0-$2K</td>\n",
       "      <td>Jul</td>\n",
       "      <td>under 30 days</td>\n",
       "      <td>2011</td>\n",
       "      <td>$17-$42</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>331465 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               category       state backers country      goal month  \\\n",
       "0                Poetry      failed     1-2      GB    $0-$2K   Aug   \n",
       "1        Narrative Film      failed    2-15      US      15K+  Sept   \n",
       "2        Narrative Film      failed    2-15      US      15K+   Jan   \n",
       "3                 Music      failed     1-2      US   $2K-$5K   Mar   \n",
       "4           Restaurants  successful     63+      US      15K+   Feb   \n",
       "...                 ...         ...     ...     ...       ...   ...   \n",
       "331670      Small Batch      failed    2-15      US  $5K-$15K   Mar   \n",
       "331671   Narrative Film      failed    2-15      US    $0-$2K   Jun   \n",
       "331672   Narrative Film      failed     1-2      US  $5K-$15K   Jul   \n",
       "331673       Technology      failed    2-15      US  $5K-$15K   Jan   \n",
       "331674  Performance Art      failed   15-63      US    $0-$2K   Jul   \n",
       "\n",
       "               length  year avg_contribute  \n",
       "0          30-92 days  2015         $0-$17  \n",
       "1          30-92 days  2017            78+  \n",
       "2          30-92 days  2013        $42-$78  \n",
       "3       under 30 days  2012         $0-$17  \n",
       "4          30-92 days  2016            78+  \n",
       "...               ...   ...            ...  \n",
       "331670  under 30 days  2017        $17-$42  \n",
       "331671  under 30 days  2011        $17-$42  \n",
       "331672     30-92 days  2010        $17-$42  \n",
       "331673     30-92 days  2016        $17-$42  \n",
       "331674  under 30 days  2011        $17-$42  \n",
       "\n",
       "[331465 rows x 9 columns]"
      ]
     },
     "execution_count": 649,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#convert years to a string\n",
    "years = ap_data['year']\n",
    "years = [str(int) for int in years]\n",
    "ap_data['year'] = years\n",
    "\n",
    "#discretize backers\n",
    "ap_data['backers'] = backer_bins\n",
    "ap_data['goal'] = goal_bins\n",
    "ap_data['length'] = length_bins\n",
    "ap_data['avg_contribute'] = avgc_bins\n",
    "\n",
    "ap_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 650,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from apyori import apriori\n",
    "from mlxtend.frequent_patterns import apriori, association_rules \n",
    "\n",
    "#turn data into binary\n",
    "ap_data = pd.get_dummies(ap_data)\n",
    "\n",
    "#running apriori\n",
    "frq_items = apriori(ap_data, min_support = .05, use_colnames = True)\n",
    "rules = association_rules(frq_items, metric = 'lift', min_threshold = 1)\n",
    "rules = rules.sort_values(['confidence', 'lift'], ascending = [False, False])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 652,
   "metadata": {},
   "outputs": [],
   "source": [
    "#filter rules by class association\n",
    "\n",
    "#convert consequents to string\n",
    "cons = rules['consequents']\n",
    "cons = [str(con) for con in cons]\n",
    "rules['consequents'] = cons\n",
    "\n",
    "filtered = pd.DataFrame()\n",
    "for i in range(len(rules)):\n",
    "    a = str(rules.loc[i, 'consequents'])\n",
    "    if a == \"frozenset({\\'state_successful\\'})\" or a == \"frozenset({\\'state_failed\\'})\":\n",
    "        if rules.loc[i, 'confidence'] >= .70:\n",
    "            filtered = filtered.append(rules.loc[i])\n",
    "            \n",
    "filtered = filtered[['antecedents', 'consequents','confidence', 'antecedent support', 'consequent support', 'support', 'lift', 'leverage']]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 668,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >antecedents</th>        <th class=\"col_heading level0 col1\" >consequents</th>        <th class=\"col_heading level0 col2\" >confidence</th>        <th class=\"col_heading level0 col3\" >antecedent support</th>        <th class=\"col_heading level0 col4\" >consequent support</th>        <th class=\"col_heading level0 col5\" >support</th>        <th class=\"col_heading level0 col6\" >lift</th>        <th class=\"col_heading level0 col7\" >leverage</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row0\" class=\"row_heading level0 row0\" >1006</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col0\" class=\"data row0 col0\" >frozenset({'backers_1-2', 'goal_15K+', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col1\" class=\"data row0 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col2\" class=\"data row0 col2\" >1.000000</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col3\" class=\"data row0 col3\" >0.053333</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col4\" class=\"data row0 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col5\" class=\"data row0 col5\" >0.053333</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col6\" class=\"data row0 col6\" >1.677336</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row0_col7\" class=\"data row0 col7\" >0.021537</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row1\" class=\"row_heading level0 row1\" >922</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col0\" class=\"data row1 col0\" >frozenset({'backers_1-2', 'goal_15K+', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col1\" class=\"data row1 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col2\" class=\"data row1 col2\" >1.000000</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col3\" class=\"data row1 col3\" >0.051496</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col4\" class=\"data row1 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col5\" class=\"data row1 col5\" >0.051496</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col6\" class=\"data row1 col6\" >1.677336</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row1_col7\" class=\"data row1 col7\" >0.020795</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row2\" class=\"row_heading level0 row2\" >206</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col0\" class=\"data row2 col0\" >frozenset({'backers_1-2', 'goal_15K+'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col1\" class=\"data row2 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col2\" class=\"data row2 col2\" >1.000000</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col3\" class=\"data row2 col3\" >0.071706</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col4\" class=\"data row2 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col5\" class=\"data row2 col5\" >0.071706</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col6\" class=\"data row2 col6\" >1.677336</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row2_col7\" class=\"data row2 col7\" >0.028956</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row3\" class=\"row_heading level0 row3\" >202</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col0\" class=\"data row3 col0\" >frozenset({'backers_1-2', 'goal_$5K-$15K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col1\" class=\"data row3 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col2\" class=\"data row3 col2\" >0.999900</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col3\" class=\"data row3 col3\" >0.060405</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col4\" class=\"data row3 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col5\" class=\"data row3 col5\" >0.060399</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col6\" class=\"data row3 col6\" >1.677168</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row3_col7\" class=\"data row3 col7\" >0.024386</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row4\" class=\"row_heading level0 row4\" >198</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col0\" class=\"data row4 col0\" >frozenset({'backers_1-2', 'goal_$2K-$5K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col1\" class=\"data row4 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col2\" class=\"data row4 col2\" >0.999435</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col3\" class=\"data row4 col3\" >0.058706</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col4\" class=\"data row4 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col5\" class=\"data row4 col5\" >0.058673</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col6\" class=\"data row4 col6\" >1.676387</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row4_col7\" class=\"data row4 col7\" >0.023673</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row5\" class=\"row_heading level0 row5\" >358</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col0\" class=\"data row5 col0\" >frozenset({'goal_15K+', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col1\" class=\"data row5 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col2\" class=\"data row5 col2\" >0.999144</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col3\" class=\"data row5 col3\" >0.063421</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col4\" class=\"data row5 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col5\" class=\"data row5 col5\" >0.063367</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col6\" class=\"data row5 col6\" >1.675899</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row5_col7\" class=\"data row5 col7\" >0.025556</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row6\" class=\"row_heading level0 row6\" >257</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col0\" class=\"data row6 col0\" >frozenset({'goal_15K+', 'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col1\" class=\"data row6 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col2\" class=\"data row6 col2\" >0.999094</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col3\" class=\"data row6 col3\" >0.053264</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col4\" class=\"data row6 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col5\" class=\"data row6 col5\" >0.053215</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col6\" class=\"data row6 col6\" >1.675816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row6_col7\" class=\"data row6 col7\" >0.021460</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row7\" class=\"row_heading level0 row7\" >1048</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col0\" class=\"data row7 col0\" >frozenset({'backers_1-2', 'avg_contribute_$0-$17', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col1\" class=\"data row7 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col2\" class=\"data row7 col2\" >0.998134</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col3\" class=\"data row7 col3\" >0.061427</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col4\" class=\"data row7 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col5\" class=\"data row7 col5\" >0.061313</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col6\" class=\"data row7 col6\" >1.674205</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row7_col7\" class=\"data row7 col7\" >0.024691</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row8\" class=\"row_heading level0 row8\" >1061</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col0\" class=\"data row8 col0\" >frozenset({'backers_1-2', 'avg_contribute_$0-$17', 'year_2015'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col1\" class=\"data row8 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col2\" class=\"data row8 col2\" >0.997704</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col3\" class=\"data row8 col3\" >0.057810</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col4\" class=\"data row8 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col5\" class=\"data row8 col5\" >0.057677</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col6\" class=\"data row8 col6\" >1.673484</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row8_col7\" class=\"data row8 col7\" >0.023212</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row9\" class=\"row_heading level0 row9\" >966</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col0\" class=\"data row9 col0\" >frozenset({'backers_1-2', 'avg_contribute_$0-$17', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col1\" class=\"data row9 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col2\" class=\"data row9 col2\" >0.996955</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col3\" class=\"data row9 col3\" >0.145623</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col4\" class=\"data row9 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col5\" class=\"data row9 col5\" >0.145180</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col6\" class=\"data row9 col6\" >1.672227</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row9_col7\" class=\"data row9 col7\" >0.058362</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row10\" class=\"row_heading level0 row10\" >234</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col0\" class=\"data row10 col0\" >frozenset({'backers_1-2', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col1\" class=\"data row10 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col2\" class=\"data row10 col2\" >0.996767</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col3\" class=\"data row10 col3\" >0.197858</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col4\" class=\"data row10 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col5\" class=\"data row10 col5\" >0.197218</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col6\" class=\"data row10 col6\" >1.671914</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row10_col7\" class=\"data row10 col7\" >0.079259</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row11\" class=\"row_heading level0 row11\" >1440</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col0\" class=\"data row11 col0\" >frozenset({'backers_1-2', 'length_under 30 days', 'avg_contribute_$0-$17', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col1\" class=\"data row11 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col2\" class=\"data row11 col2\" >0.996369</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col3\" class=\"data row11 col3\" >0.098876</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col4\" class=\"data row11 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col5\" class=\"data row11 col5\" >0.098517</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col6\" class=\"data row11 col6\" >1.671245</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row11_col7\" class=\"data row11 col7\" >0.039569</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row12\" class=\"row_heading level0 row12\" >1034</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col0\" class=\"data row12 col0\" >frozenset({'backers_1-2', 'length_under 30 days', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col1\" class=\"data row12 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col2\" class=\"data row12 col2\" >0.996152</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col3\" class=\"data row12 col3\" >0.136431</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col4\" class=\"data row12 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col5\" class=\"data row12 col5\" >0.135906</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col6\" class=\"data row12 col6\" >1.670882</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row12_col7\" class=\"data row12 col7\" >0.054568</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row13\" class=\"row_heading level0 row13\" >946</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col0\" class=\"data row13 col0\" >frozenset({'backers_1-2', 'country_US', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col1\" class=\"data row13 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col2\" class=\"data row13 col2\" >0.995761</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col3\" class=\"data row13 col3\" >0.066182</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col4\" class=\"data row13 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col5\" class=\"data row13 col5\" >0.065901</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col6\" class=\"data row13 col6\" >1.670225</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row13_col7\" class=\"data row13 col7\" >0.026445</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row14\" class=\"row_heading level0 row14\" >218</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col0\" class=\"data row14 col0\" >frozenset({'backers_1-2', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col1\" class=\"data row14 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col2\" class=\"data row14 col2\" >0.995512</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col3\" class=\"data row14 col3\" >0.085366</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col4\" class=\"data row14 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col5\" class=\"data row14 col5\" >0.084983</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col6\" class=\"data row14 col6\" >1.669807</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row14_col7\" class=\"data row14 col7\" >0.034089</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row15\" class=\"row_heading level0 row15\" >344</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col0\" class=\"data row15 col0\" >frozenset({'avg_contribute_$0-$17', 'goal_$5K-$15K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col1\" class=\"data row15 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col2\" class=\"data row15 col2\" >0.995251</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col3\" class=\"data row15 col3\" >0.054003</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col4\" class=\"data row15 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col5\" class=\"data row15 col5\" >0.053746</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col6\" class=\"data row15 col6\" >1.669371</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row15_col7\" class=\"data row15 col7\" >0.021551</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row16\" class=\"row_heading level0 row16\" >954</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col0\" class=\"data row16 col0\" >frozenset({'backers_1-2', 'year_2015', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col1\" class=\"data row16 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col2\" class=\"data row16 col2\" >0.993774</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col3\" class=\"data row16 col3\" >0.052820</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col4\" class=\"data row16 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col5\" class=\"data row16 col5\" >0.052491</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col6\" class=\"data row16 col6\" >1.666893</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row16_col7\" class=\"data row16 col7\" >0.021001</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row17\" class=\"row_heading level0 row17\" >229</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col0\" class=\"data row17 col0\" >frozenset({'backers_1-2', 'year_2015'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col1\" class=\"data row17 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col2\" class=\"data row17 col2\" >0.993558</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col3\" class=\"data row17 col3\" >0.074457</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col4\" class=\"data row17 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col5\" class=\"data row17 col5\" >0.073978</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col6\" class=\"data row17 col6\" >1.666529</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row17_col7\" class=\"data row17 col7\" >0.029587</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row18\" class=\"row_heading level0 row18\" >1021</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col0\" class=\"data row18 col0\" >frozenset({'backers_1-2', 'length_under 30 days', 'year_2015'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col1\" class=\"data row18 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col2\" class=\"data row18 col2\" >0.992907</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col3\" class=\"data row18 col3\" >0.052319</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col4\" class=\"data row18 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col5\" class=\"data row18 col5\" >0.051948</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col6\" class=\"data row18 col6\" >1.665439</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row18_col7\" class=\"data row18 col7\" >0.020756</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row19\" class=\"row_heading level0 row19\" >188</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col0\" class=\"data row19 col0\" >frozenset({'backers_1-2', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col1\" class=\"data row19 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col2\" class=\"data row19 col2\" >0.992629</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col3\" class=\"data row19 col3\" >0.200145</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col4\" class=\"data row19 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col5\" class=\"data row19 col5\" >0.198670</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col6\" class=\"data row19 col6\" >1.664972</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row19_col7\" class=\"data row19 col7\" >0.079346</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row20\" class=\"row_heading level0 row20\" >0</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col0\" class=\"data row20 col0\" >frozenset({'backers_1-2'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col1\" class=\"data row20 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col2\" class=\"data row20 col2\" >0.992257</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col3\" class=\"data row20 col3\" >0.267274</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col4\" class=\"data row20 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col5\" class=\"data row20 col5\" >0.265204</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col6\" class=\"data row20 col6\" >1.664347</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row20_col7\" class=\"data row20 col7\" >0.105860</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row21\" class=\"row_heading level0 row21\" >252</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col0\" class=\"data row21 col0\" >frozenset({'backers_2-15', 'goal_$5K-$15K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col1\" class=\"data row21 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col2\" class=\"data row21 col2\" >0.991666</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col3\" class=\"data row21 col3\" >0.053577</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col4\" class=\"data row21 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col5\" class=\"data row21 col5\" >0.053131</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col6\" class=\"data row21 col6\" >1.663357</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row21_col7\" class=\"data row21 col7\" >0.021189</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row22\" class=\"row_heading level0 row22\" >934</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col0\" class=\"data row22 col0\" >frozenset({'backers_1-2', 'length_under 30 days', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col1\" class=\"data row22 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col2\" class=\"data row22 col2\" >0.991082</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col3\" class=\"data row22 col3\" >0.133963</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col4\" class=\"data row22 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col5\" class=\"data row22 col5\" >0.132768</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col6\" class=\"data row22 col6\" >1.662377</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row22_col7\" class=\"data row22 col7\" >0.052902</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row23\" class=\"row_heading level0 row23\" >212</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col0\" class=\"data row23 col0\" >frozenset({'backers_1-2', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col1\" class=\"data row23 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col2\" class=\"data row23 col2\" >0.990729</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col3\" class=\"data row23 col3\" >0.181908</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col4\" class=\"data row23 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col5\" class=\"data row23 col5\" >0.180221</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col6\" class=\"data row23 col6\" >1.661785</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row23_col7\" class=\"data row23 col7\" >0.071771</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row24\" class=\"row_heading level0 row24\" >992</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col0\" class=\"data row24 col0\" >frozenset({'backers_1-2', 'goal_$0-$2K', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col1\" class=\"data row24 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col2\" class=\"data row24 col2\" >0.988999</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col3\" class=\"data row24 col3\" >0.058139</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col4\" class=\"data row24 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col5\" class=\"data row24 col5\" >0.057499</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col6\" class=\"data row24 col6\" >1.658883</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row24_col7\" class=\"data row24 col7\" >0.022838</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row25\" class=\"row_heading level0 row25\" >330</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col0\" class=\"data row25 col0\" >frozenset({'avg_contribute_$0-$17', 'goal_$2K-$5K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col1\" class=\"data row25 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col2\" class=\"data row25 col2\" >0.987748</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col3\" class=\"data row25 col3\" >0.052941</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col4\" class=\"data row25 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col5\" class=\"data row25 col5\" >0.052292</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col6\" class=\"data row25 col6\" >1.656785</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row25_col7\" class=\"data row25 col7\" >0.020730</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row26\" class=\"row_heading level0 row26\" >222</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col0\" class=\"data row26 col0\" >frozenset({'backers_1-2', 'year_2014'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col1\" class=\"data row26 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col2\" class=\"data row26 col2\" >0.986301</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col3\" class=\"data row26 col3\" >0.053294</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col4\" class=\"data row26 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col5\" class=\"data row26 col5\" >0.052564</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col6\" class=\"data row26 col6\" >1.654357</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row26_col7\" class=\"data row26 col7\" >0.020791</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row27\" class=\"row_heading level0 row27\" >456</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col0\" class=\"data row27 col0\" >frozenset({'backers_63+', 'goal_$2K-$5K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col1\" class=\"data row27 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col2\" class=\"data row27 col2\" >0.976658</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col3\" class=\"data row27 col3\" >0.056869</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col4\" class=\"data row27 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col5\" class=\"data row27 col5\" >0.055541</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col6\" class=\"data row27 col6\" >2.418569</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row27_col7\" class=\"data row27 col7\" >0.032577</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row28\" class=\"row_heading level0 row28\" >1200</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col0\" class=\"data row28 col0\" >frozenset({'avg_contribute_$0-$17', 'country_US', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col1\" class=\"data row28 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col2\" class=\"data row28 col2\" >0.975828</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col3\" class=\"data row28 col3\" >0.060033</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col4\" class=\"data row28 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col5\" class=\"data row28 col5\" >0.058582</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col6\" class=\"data row28 col6\" >1.636791</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row28_col7\" class=\"data row28 col7\" >0.022791</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row29\" class=\"row_heading level0 row29\" >912</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col0\" class=\"data row29 col0\" >frozenset({'backers_1-2', 'goal_$0-$2K', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col1\" class=\"data row29 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col2\" class=\"data row29 col2\" >0.974415</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col3\" class=\"data row29 col3\" >0.056483</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col4\" class=\"data row29 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col5\" class=\"data row29 col5\" >0.055037</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col6\" class=\"data row29 col6\" >1.634421</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row29_col7\" class=\"data row29 col7\" >0.021363</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row30\" class=\"row_heading level0 row30\" >192</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col0\" class=\"data row30 col0\" >frozenset({'backers_1-2', 'goal_$0-$2K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col1\" class=\"data row30 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col2\" class=\"data row30 col2\" >0.973444</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col3\" class=\"data row30 col3\" >0.076458</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col4\" class=\"data row30 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col5\" class=\"data row30 col5\" >0.074427</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col6\" class=\"data row30 col6\" >1.632793</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row30_col7\" class=\"data row30 col7\" >0.028844</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row31\" class=\"row_heading level0 row31\" >398</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col0\" class=\"data row31 col0\" >frozenset({'avg_contribute_$0-$17', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col1\" class=\"data row31 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col2\" class=\"data row31 col2\" >0.973210</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col3\" class=\"data row31 col3\" >0.079505</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col4\" class=\"data row31 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col5\" class=\"data row31 col5\" >0.077375</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col6\" class=\"data row31 col6\" >1.632400</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row31_col7\" class=\"data row31 col7\" >0.029975</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row32\" class=\"row_heading level0 row32\" >979</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col0\" class=\"data row32 col0\" >frozenset({'backers_1-2', 'goal_$0-$2K', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col1\" class=\"data row32 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col2\" class=\"data row32 col2\" >0.971254</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col3\" class=\"data row32 col3\" >0.057723</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col4\" class=\"data row32 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col5\" class=\"data row32 col5\" >0.056063</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col6\" class=\"data row32 col6\" >1.629119</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row32_col7\" class=\"data row32 col7\" >0.021650</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row33\" class=\"row_heading level0 row33\" >415</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col0\" class=\"data row33 col0\" >frozenset({'avg_contribute_$0-$17', 'year_2015'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col1\" class=\"data row33 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col2\" class=\"data row33 col2\" >0.968628</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col3\" class=\"data row33 col3\" >0.068662</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col4\" class=\"data row33 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col5\" class=\"data row33 col5\" >0.066508</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col6\" class=\"data row33 col6\" >1.624714</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row33_col7\" class=\"data row33 col7\" >0.025573</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row34\" class=\"row_heading level0 row34\" >246</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col0\" class=\"data row34 col0\" >frozenset({'goal_$2K-$5K', 'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col1\" class=\"data row34 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col2\" class=\"data row34 col2\" >0.958774</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col3\" class=\"data row34 col3\" >0.053055</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col4\" class=\"data row34 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col5\" class=\"data row34 col5\" >0.050868</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col6\" class=\"data row34 col6\" >1.608186</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row34_col7\" class=\"data row34 col7\" >0.019237</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row35\" class=\"row_heading level0 row35\" >308</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col0\" class=\"data row35 col0\" >frozenset({'avg_contribute_$0-$17', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col1\" class=\"data row35 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col2\" class=\"data row35 col2\" >0.957779</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col3\" class=\"data row35 col3\" >0.187000</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col4\" class=\"data row35 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col5\" class=\"data row35 col5\" >0.179105</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col6\" class=\"data row35 col6\" >1.606518</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row35_col7\" class=\"data row35 col7\" >0.067618</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row36\" class=\"row_heading level0 row36\" >409</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col0\" class=\"data row36 col0\" >frozenset({'year_2014', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col1\" class=\"data row36 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col2\" class=\"data row36 col2\" >0.956582</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col3\" class=\"data row36 col3\" >0.054268</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col4\" class=\"data row36 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col5\" class=\"data row36 col5\" >0.051912</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col6\" class=\"data row36 col6\" >1.604509</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row36_col7\" class=\"data row36 col7\" >0.019558</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row37\" class=\"row_heading level0 row37\" >20</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col0\" class=\"data row37 col0\" >frozenset({'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col1\" class=\"data row37 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col2\" class=\"data row37 col2\" >0.954791</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col3\" class=\"data row37 col3\" >0.254853</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col4\" class=\"data row37 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col5\" class=\"data row37 col5\" >0.243332</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col6\" class=\"data row37 col6\" >1.601506</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row37_col7\" class=\"data row37 col7\" >0.091392</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row38\" class=\"row_heading level0 row38\" >1182</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col0\" class=\"data row38 col0\" >frozenset({'length_under 30 days', 'avg_contribute_$0-$17', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col1\" class=\"data row38 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col2\" class=\"data row38 col2\" >0.949246</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col3\" class=\"data row38 col3\" >0.126967</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col4\" class=\"data row38 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col5\" class=\"data row38 col5\" >0.120523</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col6\" class=\"data row38 col6\" >1.592203</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row38_col7\" class=\"data row38 col7\" >0.044827</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row39\" class=\"row_heading level0 row39\" >390</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col0\" class=\"data row39 col0\" >frozenset({'length_under 30 days', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col1\" class=\"data row39 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col2\" class=\"data row39 col2\" >0.946440</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col3\" class=\"data row39 col3\" >0.175349</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col4\" class=\"data row39 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col5\" class=\"data row39 col5\" >0.165957</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col6\" class=\"data row39 col6\" >1.587498</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row39_col7\" class=\"data row39 col7\" >0.061417</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row40\" class=\"row_heading level0 row40\" >1222</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col0\" class=\"data row40 col0\" >frozenset({'backers_15-63', 'goal_$0-$2K', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col1\" class=\"data row40 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col2\" class=\"data row40 col2\" >0.935063</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col3\" class=\"data row40 col3\" >0.073730</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col4\" class=\"data row40 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col5\" class=\"data row40 col5\" >0.068942</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col6\" class=\"data row40 col6\" >2.315564</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row40_col7\" class=\"data row40 col7\" >0.039169</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row41\" class=\"row_heading level0 row41\" >1250</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col0\" class=\"data row41 col0\" >frozenset({'backers_15-63', 'goal_$0-$2K', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col1\" class=\"data row41 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col2\" class=\"data row41 col2\" >0.934710</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col3\" class=\"data row41 col3\" >0.066309</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col4\" class=\"data row41 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col5\" class=\"data row41 col5\" >0.061979</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col6\" class=\"data row41 col6\" >2.314692</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row41_col7\" class=\"data row41 col7\" >0.035203</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row42\" class=\"row_heading level0 row42\" >426</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col0\" class=\"data row42 col0\" >frozenset({'backers_15-63', 'goal_$0-$2K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col1\" class=\"data row42 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col2\" class=\"data row42 col2\" >0.934005</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col3\" class=\"data row42 col3\" >0.091382</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col4\" class=\"data row42 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col5\" class=\"data row42 col5\" >0.085351</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col6\" class=\"data row42 col6\" >2.312944</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row42_col7\" class=\"data row42 col7\" >0.048450</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row43\" class=\"row_heading level0 row43\" >1264</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col0\" class=\"data row43 col0\" >frozenset({'backers_63+', 'country_US', 'goal_$5K-$15K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col1\" class=\"data row43 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col2\" class=\"data row43 col2\" >0.912288</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col3\" class=\"data row43 col3\" >0.076599</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col4\" class=\"data row43 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col5\" class=\"data row43 col5\" >0.069881</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col6\" class=\"data row43 col6\" >2.259166</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row43_col7\" class=\"data row43 col7\" >0.038949</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row44\" class=\"row_heading level0 row44\" >462</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col0\" class=\"data row44 col0\" >frozenset({'backers_63+', 'goal_$5K-$15K'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col1\" class=\"data row44 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col2\" class=\"data row44 col2\" >0.909871</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col3\" class=\"data row44 col3\" >0.091717</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col4\" class=\"data row44 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col5\" class=\"data row44 col5\" >0.083451</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col6\" class=\"data row44 col6\" >2.253181</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row44_col7\" class=\"data row44 col7\" >0.046414</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row45\" class=\"row_heading level0 row45\" >1085</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col0\" class=\"data row45 col0\" >frozenset({'country_US', 'backers_2-15', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col1\" class=\"data row45 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col2\" class=\"data row45 col2\" >0.906886</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col3\" class=\"data row45 col3\" >0.069531</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col4\" class=\"data row45 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col5\" class=\"data row45 col5\" >0.063056</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col6\" class=\"data row45 col6\" >1.521152</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row45_col7\" class=\"data row45 col7\" >0.021603</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row46\" class=\"row_heading level0 row46\" >268</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col0\" class=\"data row46 col0\" >frozenset({'backers_2-15', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col1\" class=\"data row46 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col2\" class=\"data row46 col2\" >0.905151</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col3\" class=\"data row46 col3\" >0.086866</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col4\" class=\"data row46 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col5\" class=\"data row46 col5\" >0.078627</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col6\" class=\"data row46 col6\" >1.518241</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row46_col7\" class=\"data row46 col7\" >0.026839</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row47\" class=\"row_heading level0 row47\" >1099</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col0\" class=\"data row47 col0\" >frozenset({'country_US', 'backers_2-15', 'avg_contribute_$17-$42'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col1\" class=\"data row47 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col2\" class=\"data row47 col2\" >0.897110</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col3\" class=\"data row47 col3\" >0.068906</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col4\" class=\"data row47 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col5\" class=\"data row47 col5\" >0.061816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col6\" class=\"data row47 col6\" >1.504755</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row47_col7\" class=\"data row47 col7\" >0.020736</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row48\" class=\"row_heading level0 row48\" >1278</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col0\" class=\"data row48 col0\" >frozenset({'backers_63+', 'length_under 30 days', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col1\" class=\"data row48 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col2\" class=\"data row48 col2\" >0.892756</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col3\" class=\"data row48 col3\" >0.118320</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col4\" class=\"data row48 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col5\" class=\"data row48 col5\" >0.105631</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col6\" class=\"data row48 col6\" >2.210797</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row48_col7\" class=\"data row48 col7\" >0.057851</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row49\" class=\"row_heading level0 row49\" >274</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col0\" class=\"data row49 col0\" >frozenset({'backers_2-15', 'avg_contribute_$17-$42'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col1\" class=\"data row49 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col2\" class=\"data row49 col2\" >0.890139</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col3\" class=\"data row49 col3\" >0.087382</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col4\" class=\"data row49 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col5\" class=\"data row49 col5\" >0.077782</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col6\" class=\"data row49 col6\" >1.493063</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row49_col7\" class=\"data row49 col7\" >0.025686</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row50\" class=\"row_heading level0 row50\" >1302</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col0\" class=\"data row50 col0\" >frozenset({'backers_63+', 'avg_contribute_$42-$78', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col1\" class=\"data row50 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col2\" class=\"data row50 col2\" >0.888810</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col3\" class=\"data row50 col3\" >0.076895</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col4\" class=\"data row50 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col5\" class=\"data row50 col5\" >0.068345</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col6\" class=\"data row50 col6\" >2.201026</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row50_col7\" class=\"data row50 col7\" >0.037294</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row51\" class=\"row_heading level0 row51\" >474</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col0\" class=\"data row51 col0\" >frozenset({'backers_63+', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col1\" class=\"data row51 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col2\" class=\"data row51 col2\" >0.888228</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col3\" class=\"data row51 col3\" >0.146592</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col4\" class=\"data row51 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col5\" class=\"data row51 col5\" >0.130207</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col6\" class=\"data row51 col6\" >2.199584</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row51_col7\" class=\"data row51 col7\" >0.071011</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row52\" class=\"row_heading level0 row52\" >1316</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col0\" class=\"data row52 col0\" >frozenset({'avg_contribute_78+', 'backers_63+', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col1\" class=\"data row52 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col2\" class=\"data row52 col2\" >0.884997</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col3\" class=\"data row52 col3\" >0.078989</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col4\" class=\"data row52 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col5\" class=\"data row52 col5\" >0.069905</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col6\" class=\"data row52 col6\" >2.191583</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row52_col7\" class=\"data row52 col7\" >0.038008</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row53\" class=\"row_heading level0 row53\" >484</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col0\" class=\"data row53 col0\" >frozenset({'backers_63+', 'avg_contribute_$42-$78'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col1\" class=\"data row53 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col2\" class=\"data row53 col2\" >0.884063</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col3\" class=\"data row53 col3\" >0.091624</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col4\" class=\"data row53 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col5\" class=\"data row53 col5\" >0.081001</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col6\" class=\"data row53 col6\" >2.189270</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row53_col7\" class=\"data row53 col7\" >0.044002</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row54\" class=\"row_heading level0 row54\" >1114</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col0\" class=\"data row54 col0\" >frozenset({'goal_$0-$2K', 'avg_contribute_$0-$17', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col1\" class=\"data row54 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col2\" class=\"data row54 col2\" >0.882718</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col3\" class=\"data row54 col3\" >0.061222</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col4\" class=\"data row54 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col5\" class=\"data row54 col5\" >0.054042</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col6\" class=\"data row54 col6\" >1.480615</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row54_col7\" class=\"data row54 col7\" >0.017542</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row55\" class=\"row_heading level0 row55\" >450</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col0\" class=\"data row55 col0\" >frozenset({'backers_63+', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col1\" class=\"data row55 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col2\" class=\"data row55 col2\" >0.878751</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col3\" class=\"data row55 col3\" >0.203361</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col4\" class=\"data row55 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col5\" class=\"data row55 col5\" >0.178704</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col6\" class=\"data row55 col6\" >2.176116</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row55_col7\" class=\"data row55 col7\" >0.096583</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row56\" class=\"row_heading level0 row56\" >490</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col0\" class=\"data row56 col0\" >frozenset({'avg_contribute_78+', 'backers_63+'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col1\" class=\"data row56 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col2\" class=\"data row56 col2\" >0.878435</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col3\" class=\"data row56 col3\" >0.096167</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col4\" class=\"data row56 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col5\" class=\"data row56 col5\" >0.084476</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col6\" class=\"data row56 col6\" >2.175333</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row56_col7\" class=\"data row56 col7\" >0.045643</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row57\" class=\"row_heading level0 row57\" >322</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col0\" class=\"data row57 col0\" >frozenset({'goal_$0-$2K', 'avg_contribute_$0-$17'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col1\" class=\"data row57 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col2\" class=\"data row57 col2\" >0.874987</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col3\" class=\"data row57 col3\" >0.084489</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col4\" class=\"data row57 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col5\" class=\"data row57 col5\" >0.073926</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col6\" class=\"data row57 col6\" >1.467646</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row57_col7\" class=\"data row57 col7\" >0.023556</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row58\" class=\"row_heading level0 row58\" >26</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col0\" class=\"data row58 col0\" >frozenset({'backers_63+'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col1\" class=\"data row58 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col2\" class=\"data row58 col2\" >0.872909</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col3\" class=\"data row58 col3\" >0.248871</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col4\" class=\"data row58 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col5\" class=\"data row58 col5\" >0.217242</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col6\" class=\"data row58 col6\" >2.161648</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row58_col7\" class=\"data row58 col7\" >0.116743</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row59\" class=\"row_heading level0 row59\" >1209</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col0\" class=\"data row59 col0\" >frozenset({'goal_$0-$2K', 'avg_contribute_$0-$17', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col1\" class=\"data row59 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col2\" class=\"data row59 col2\" >0.864367</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col3\" class=\"data row59 col3\" >0.064550</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col4\" class=\"data row59 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col5\" class=\"data row59 col5\" >0.055795</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col6\" class=\"data row59 col6\" >1.449834</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row59_col7\" class=\"data row59 col7\" >0.017311</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row60\" class=\"row_heading level0 row60\" >1288</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col0\" class=\"data row60 col0\" >frozenset({'backers_63+', 'country_US', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col1\" class=\"data row60 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col2\" class=\"data row60 col2\" >0.859266</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col3\" class=\"data row60 col3\" >0.085041</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col4\" class=\"data row60 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col5\" class=\"data row60 col5\" >0.073073</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col6\" class=\"data row60 col6\" >2.127864</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row60_col7\" class=\"data row60 col7\" >0.038732</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row61\" class=\"row_heading level0 row61\" >241</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col0\" class=\"data row61 col0\" >frozenset({'country_US', 'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col1\" class=\"data row61 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col2\" class=\"data row61 col2\" >0.858795</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col3\" class=\"data row61 col3\" >0.186777</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col4\" class=\"data row61 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col5\" class=\"data row61 col5\" >0.160403</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col6\" class=\"data row61 col6\" >1.440487</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row61_col7\" class=\"data row61 col7\" >0.049050</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row62\" class=\"row_heading level0 row62\" >3</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col0\" class=\"data row62 col0\" >frozenset({'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col1\" class=\"data row62 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col2\" class=\"data row62 col2\" >0.857500</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col3\" class=\"data row62 col3\" >0.238981</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col4\" class=\"data row62 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col5\" class=\"data row62 col5\" >0.204927</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col6\" class=\"data row62 col6\" >1.438315</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row62_col7\" class=\"data row62 col7\" >0.062450</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row63\" class=\"row_heading level0 row63\" >478</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col0\" class=\"data row63 col0\" >frozenset({'backers_63+', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col1\" class=\"data row63 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col2\" class=\"data row63 col2\" >0.850953</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col3\" class=\"data row63 col3\" >0.102279</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col4\" class=\"data row63 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col5\" class=\"data row63 col5\" >0.087035</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col6\" class=\"data row63 col6\" >2.107276</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row63_col7\" class=\"data row63 col7\" >0.045733</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row64\" class=\"row_heading level0 row64\" >263</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col0\" class=\"data row64 col0\" >frozenset({'length_under 30 days', 'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col1\" class=\"data row64 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col2\" class=\"data row64 col2\" >0.830289</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col3\" class=\"data row64 col3\" >0.152116</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col4\" class=\"data row64 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col5\" class=\"data row64 col5\" >0.126300</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col6\" class=\"data row64 col6\" >1.392673</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row64_col7\" class=\"data row64 col7\" >0.035611</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row65\" class=\"row_heading level0 row65\" >1075</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col0\" class=\"data row65 col0\" >frozenset({'length_under 30 days', 'country_US', 'backers_2-15'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col1\" class=\"data row65 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col2\" class=\"data row65 col2\" >0.830276</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col3\" class=\"data row65 col3\" >0.117246</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col4\" class=\"data row65 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col5\" class=\"data row65 col5\" >0.097347</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col6\" class=\"data row65 col6\" >1.392651</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row65_col7\" class=\"data row65 col7\" >0.027446</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row66\" class=\"row_heading level0 row66\" >348</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col0\" class=\"data row66 col0\" >frozenset({'goal_15K+', 'length_under 30 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col1\" class=\"data row66 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col2\" class=\"data row66 col2\" >0.776223</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col3\" class=\"data row66 col3\" >0.129803</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col4\" class=\"data row66 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col5\" class=\"data row66 col5\" >0.100756</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col6\" class=\"data row66 col6\" >1.301987</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row66_col7\" class=\"data row66 col7\" >0.023370</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row67\" class=\"row_heading level0 row67\" >1140</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col0\" class=\"data row67 col0\" >frozenset({'goal_15K+', 'length_under 30 days', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col1\" class=\"data row67 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col2\" class=\"data row67 col2\" >0.762648</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col3\" class=\"data row67 col3\" >0.096245</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col4\" class=\"data row67 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col5\" class=\"data row67 col5\" >0.073401</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col6\" class=\"data row67 col6\" >1.279217</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row67_col7\" class=\"data row67 col7\" >0.016021</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row68\" class=\"row_heading level0 row68\" >6</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col0\" class=\"data row68 col0\" >frozenset({'goal_15K+'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col1\" class=\"data row68 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col2\" class=\"data row68 col2\" >0.761553</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col3\" class=\"data row68 col3\" >0.239522</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col4\" class=\"data row68 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col5\" class=\"data row68 col5\" >0.182408</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col6\" class=\"data row68 col6\" >1.277380</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row68_col7\" class=\"data row68 col7\" >0.039610</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row69\" class=\"row_heading level0 row69\" >284</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col0\" class=\"data row69 col0\" >frozenset({'goal_15K+', 'country_US'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col1\" class=\"data row69 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col2\" class=\"data row69 col2\" >0.746563</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col3\" class=\"data row69 col3\" >0.181286</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col4\" class=\"data row69 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col5\" class=\"data row69 col5\" >0.135342</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col6\" class=\"data row69 col6\" >1.252238</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row69_col7\" class=\"data row69 col7\" >0.027262</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row70\" class=\"row_heading level0 row70\" >353</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col0\" class=\"data row70 col0\" >frozenset({'goal_15K+', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col1\" class=\"data row70 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col2\" class=\"data row70 col2\" >0.744198</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col3\" class=\"data row70 col3\" >0.109719</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col4\" class=\"data row70 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col5\" class=\"data row70 col5\" >0.081653</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col6\" class=\"data row70 col6\" >1.248270</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row70_col7\" class=\"data row70 col7\" >0.016240</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row71\" class=\"row_heading level0 row71\" >1149</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col0\" class=\"data row71 col0\" >frozenset({'goal_15K+', 'country_US', 'length_30-92 days'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col1\" class=\"data row71 col1\" >frozenset({'state_failed'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col2\" class=\"data row71 col2\" >0.728360</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col3\" class=\"data row71 col3\" >0.085041</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col4\" class=\"data row71 col4\" >0.596184</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col5\" class=\"data row71 col5\" >0.061940</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col6\" class=\"data row71 col6\" >1.221703</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row71_col7\" class=\"data row71 col7\" >0.011240</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                        <th id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785level0_row72\" class=\"row_heading level0 row72\" >468</th>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col0\" class=\"data row72 col0\" >frozenset({'backers_63+', 'goal_15K+'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col1\" class=\"data row72 col1\" >frozenset({'state_successful'})</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col2\" class=\"data row72 col2\" >0.716023</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col3\" class=\"data row72 col3\" >0.077384</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col4\" class=\"data row72 col4\" >0.403816</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col5\" class=\"data row72 col5\" >0.055409</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col6\" class=\"data row72 col6\" >1.773141</td>\n",
       "                        <td id=\"T_033f4406_2e08_11eb_bb25_faffc20cd785row72_col7\" class=\"data row72 col7\" >0.024160</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7fd62b06e700>"
      ]
     },
     "execution_count": 668,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#showing only class association rules with confidence >= to .70\n",
    "\n",
    "filtered= filtered.sort_values(by=['confidence'], ascending=False)\n",
    "filtered.style"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Duscussion of Apriori Results:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Phase Six: Duscussion\n",
    "* Data on campaign marketing (what channels, how much plan to be spent)\n",
    "* Data on whether backers were in network of founders\n",
    "* Data on page views, conversion\n",
    "* Data on time dispersion of backers (what it means if you get lots of backers early on)\n",
    "* Classification of quality of campaign page (how does campaign page appear?)\n",
    "* K-means clustering to look at differnt sub-classes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
